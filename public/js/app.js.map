{"version":3,"sources":["js/app.js","js/controllers/mainController.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","MainController","$state","main","this","console","log","angular","module","config","$inject"],"mappings":"YASA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,WACLC,IAAK,IACLC,YAAa,8BACbC,WAAY,iCAEbH,MAAM,QACLC,IAAK,QACLC,YAAa,2BACbC,WAAY,2BAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,4BACbC,WAAY,6BAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,4BACbC,WAAY,6BAEbH,MAAM,QACLC,IAAK,QACLC,YAAa,0BACbC,WAAY,2BAKhBJ,EAAmBK,UAAU,SCnC/B,QAASC,gBAAeC,GACtB,GAAMC,GAAOC,IACbC,SAAQC,IAAIH,EAAMD,GDNpBK,QAAQC,OAAO,UAAW,aAAc,cACvCC,OAAOhB,QAIRA,OAAOiB,SAAW,iBAAkB,sBCLpCH,QAAQC,OAAO,UACdT,WAAW,iBAAkBE,gBAE9BA,eAAeS,SAAW","file":"app.js","sourcesContent":["angular.module('stmApp', ['ngResource', 'ui.router'])\n.config(Router);\n\n\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n  //\n  // Now set up the states\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('landing', {\n      url: '/',\n      templateUrl: '/templates/landingPage.html',\n      controller: 'LandingController as landing'\n    })\n    .state('home', {\n      url: '/home',\n      templateUrl: '/templates/homePage.html',\n      controller: 'HomeController as home'\n    })\n    .state('music', {\n      url: '/music',\n      templateUrl: '/templates/musicPage.html',\n      controller: 'MusicController as music'\n    })\n    .state('video', {\n      url: '/video',\n      templateUrl: '/templates/videoPage.html',\n      controller: 'VideoController as video'\n    })\n    .state('gigs', {\n      url: '/gigs',\n      templateUrl: '/templates/gigPage.html',\n      controller: 'GigsController as gigs'\n    });\n\n//\n// For any unmatched url, redirect to /home\n  $urlRouterProvider.otherwise('/home');\n\n\n}\n","angular.module('stmApp')\n.controller('MainController', MainController);\n\nMainController.$inject = ['$state'];\nfunction MainController($state) {\n  const main = this;\n  console.log(main, $state);\n}\n"]}